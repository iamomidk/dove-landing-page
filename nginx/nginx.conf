worker_processes auto;

events {
  worker_connections 1024;
}

http {
  # Basic, safe defaults
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Log formats
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  # Real IP / proxy headers (tune if you're behind another LB)
  map $http_x_forwarded_proto $fe_proto {
    default $http_x_forwarded_proto;
    ""      $scheme;
  }

  # --- Upstream API (Docker service name) ---
  upstream api_upstream {
    server api:4000;
    keepalive 32;
  }

  # --- Simple rate limit per IP (burst allowed) ---
  # ~5 requests/second average; adjust to your needs.
  limit_req_zone $binary_remote_addr zone=api_rate:10m rate=5r/s;

  server {
    listen 80;
    server_name _;

    # Security headers (tweak for your app)
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # If you later terminate TLS here, also set:
    # proxy_set_header X-Forwarded-Proto https;

    # Health check (handy for LB)
    location = /nginx-health {
      return 200 "ok\n";
      add_header Content-Type text/plain;
    }

    # --- API proxy ---
    location /api/ {
      # Rate limit
      limit_req zone=api_rate burst=20 nodelay;

      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $fe_proto;

      # Timeouts
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      # Buffering (tune if large payloads)
      proxy_buffering on;
      proxy_buffers 16 16k;
      proxy_busy_buffers_size 64k;
    }

    # (Optional) Serve a minimal landing page for /
    location = / {
      default_type text/plain;
      return 200 "NGINX reverse proxy is up.\n";
    }
  }
}
